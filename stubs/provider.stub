<?php namespace {{vendor}}\{{name}};

use Illuminate\Support\ServiceProvider;

class {{name}}ServiceProvider extends ServiceProvider {

	/**
	 * Indicates if loading of the provider is deferred.
	 *
	 * @var bool
	 */
	protected $defer = false;

	/**
	 * Bootstrap the application events.
	 *
	 * @return void
	 */
	public function boot()
	{
		/**
		 * Loading routes and controllers
		 */
		include __DIR__.'/../../routes/routes.php';

		/**
		 * Loading translations
		 */
		$this->loadTranslationsFrom(__DIR__ . '/../../lang', '{{lower_name}}');

		/**
		 * Loading and preparing for publish views
		 */
		$this->loadViewsFrom(__DIR__ . '/../../views', '{{lower_name}}');

		$this->publishes([
			__DIR__.'/../../views' => base_path('resources/views/{{vendor}}/{{lower_name}}'),
		], 'views');

		/**
		 * Preparing for publish config
		 */
		$config = config_path('{{lower_name}}.php');

		$this->publishes([
			__DIR__.'/../../config/config.php' => $config,
		], 'config');

		if (file_exists($config)) {
			$this->mergeConfigFrom($config, '{{lower_name}}');
		}

		/**
		 * Preparing for publish assets (JavaScript, CSS, images...)
		 */
		$this->publishes([
		    __DIR__.'/../../assets' => public_path('packages/{{vendor}}/{{lower_name}}'),
		], 'public');

		/**
		 * Preparing for publish your migrations
		 */
		$this->publishes([
		    __DIR__.'/../../migrations/' => database_path('/migrations')
		], 'migrations');
	}

	/**
	 * Register the service provider.
	 *
	 * @return void
	 */
	public function register()
	{
		$this->app->singleton('{{lower_name}}', function($app)
		{
			return new {{name}};
		});
	}

	/**
	 * Get the services provided by the provider.
	 *
	 * @return array
	 */
	public function provides()
	{
		return ['{{lower_name}}'];
	}

}
